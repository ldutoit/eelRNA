panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
#BASER
means<-c(0.95,0.3)
variances<-c( 0.02,0.01)
nsamples<-c(23,12)
standard_error<-variances/sqrt(nsamples)
upperlimit=means+2*standard_error #replace by a vector of lower limits,
lowerlimit=means-2*standard_error # replace by a vector of upper limits
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(0,1.5),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab("Nucleotide diversity")+xlab("")+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
upperlimit=means+variances#+2*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances%2*standard_error # replace by a vector of upper limits
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(0,1.5),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
means<-c(0.000718,0.000718)
variances<-c(0.000403,0.000403)
nsamples<-c(23,12)
standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+2*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances%2*standard_error # replace by a vector of upper limits
lowerlimit=means-variances#2*standard_error # replace by a vector of upper limits
axis(1,at=c(1,2),labels=c("Ancient","Modern"))upperlimit
upperlimit
lowerlimit
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.1,0.1),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.001,0.001),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.0001,0.002),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
lowerlimit
upperlimit
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
nsamples<-c(23,12)
standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+2*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#2*standard_error # replace by a vector of upper limits
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.0001,0.002),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
#BASER
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.0001,0.0015),xaxt="n",xlab="",frame=F,ylab="Nuc. diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab("Nucleotide diversity")+xlab("")+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
upperlimit
lowerlimit
#BASER
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=c(-0.0001,0.0015),xaxt="n",xlab="",frame=F,ylab="Nucleotide  diversity")
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab("Nucleotide diversity")+xlab("")+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
###PARAMETERS
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims[0],ylims[1])
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims[0],ylims[1])+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ylims[0]
ylims[0]
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
###PARAMETERS
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=20))
###PARAMETERS
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=10))
###PARAMETERS
means<-c(0.000718,0.000035)
variances<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-variances/sqrt(nsamples)
upperlimit=means+variances#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=means-variances#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
means=means,
variance=variances,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=means), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=15))
#Barplot
plot(c(1,2),means,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
###PARAMETERS
estimates<-c(0.000718,0.000035)
plus_minus<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-plus_minus/sqrt(nsamples)
upperlimit=estimates+plus_minus#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=estimates-plus_minus#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),estimates,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
estimates=estimates,
plus_minus=plus_minus,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=estimates), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=15))
###PARAMETERS
estimates<-c(0.000718,0.000035)
plus_minus<-c(0.000403,0.000038)
#nsamples<-c(23,12)
#standard_error<-plus_minus/sqrt(nsamples)
upperlimit=estimates+plus_minus#+1.96*standard_error #replace by a vector of lower limits,
lowerlimit=estimates-plus_minus#1.96*standard_error # replace by a vector of upper limits
ylims=c(-0.0001,0.0015)
ylab_value="Nucleotide  diversity"
#Barplot
plot(c(1,2),estimates,pch=19,xlim=c(0.8,2.2),ylim=ylims,xaxt="n",xlab="",frame=F,ylab=ylab_value)
axis(1,at=c(1,2),labels=c("Ancient","Modern"))
arrows(x0=c(1,2), y0=lowerlimit, x1 = c(1,2), y1 = upperlimit,angle=90,code=3,length=0.05)
##ggplot
library(ggplot2)
# create dummy data
data <- data.frame(
name=c("Historic","Modern"),
estimates=estimates,
plus_minus=plus_minus,
upperlimit=upperlimit,
lowerlimit=lowerlimit
)
ggplot(data) +
geom_bar( aes(x=name, y=estimates), stat="identity",fill=rainbow(dim(data)[1]), alpha=0.7) +ylab(ylab_value)+xlab("")+ylim(ylims)+
geom_errorbar( aes(x=name, ymin=lowerlimit, ymax=upperlimit), width=0.4, colour="black", alpha=0.9, size=1)+ theme( # Remove panel border
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
text = element_text(size=15))
Additional figures
------------------
Volcano plot with FC threshold at 2:
library(tidyr)
library(DESeq2)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DESeq2")
library(tidyr)
library(DESeq2)
library(pheatmap)
library(stringr)
library(ggplot2)
library(dplyr)
library(matrixStats)
library(pheatmap)
install.packages("pheatmap")
library(tidyr)
library(DESeq2)
library(pheatmap)
library(stringr)
library(ggplot2)
library(dplyr)
library(matrixStats)
library(pheatmap)
library(edgeR)
library("RColorBrewer")
counts=read.csv("results_files/RSEM_gene_counts.txt", sep="", head=T)
head(counts)
colnames(counts)
######### Do the filtering
samples=cbind(colnames(counts),rep(c("silver","yellow"),each=6))
rownames(samples)<-samples[,1]
samples=as.data.frame(samples[,-1])
colnames(samples)<-"treatment"
treatment <- factor(rep(c("silver","yellow"),each=6))
des <- model.matrix(~treatment)
dge <- DGEList(counts=counts)
keep <- filterByExpr(counts, des) # inside function of limma aware of the design to remove rad counts
dge <- dge[keep,keep.lib.sizes=FALSE]
dge<- calcNormFactors(dge)
print("After filtering, kept a matrix of X genes by Y samples:")
dim(dge)
quantile(apply(dge$counts,1,sum)/12,seq(0,1,0.05))
hist(apply(dge$counts,1,sum)/12,xlim=c(0,2000),breaks=100000,main="number of reads per gene per sample",xlab= "number of reads per sample",ylab= "frequency") # 32447 genes passing filtering
which(apply(dge$counts,1,sum)/12>1e6)
logCPM <- cpm(dge, log=TRUE)
design <- model.matrix(~samples$treatment)
v <- voom(dge, design, plot=TRUE, normalize="quantile")
pdf("MDS.pdf")
plotMDS(v, pch=19, col=rep(c("gray","gold"),each=6),cex=6,frame=F,main="",xlim=c(-2,4),cex.axis=3,xaxt="n",yaxt="n")
dev.off()
fit <- lmFit(v, design)
fit <- eBayes(fit, trend=TRUE)
results<-topTable(fit, coef=ncol(design),n=Inf)
sum(results$adj.P.Val<0.05)
##Table of DE genes
#DE_counts are the counts for the DE
DE_results<-results[results$adj.P.Val<0.05,] # DE_results are only the significant genes(p-value, log Fold-change,,,)
DE_counts<-dge[which(rownames(dge)%in%rownames(results)),]$counts #counts for significant genes
#positive means more in yellow
#negative means more in gray
##Overexpressed and underexpressed in general?
length(which(DE_results$logFC<(-1))) # how many genes under expressed in yellow  or more
length(which(DE_results$logFC>1)) # how many genes over expressed in yellow
##Overexpressed and underexpressed  by a actor 2 or more
length(which(DE_results$logFC<(-1))) # how many genes under expressed in yellow by a
length(which(DE_results$logFC>1)) # how many genes over expressed in yellow
###Volcano plot (relationship between Log Fold Change and -value)
plot(results$logFC,-log(results$adj.P.Val),pch=10,cex=0.1)
points(DE_results$logFC,-log(DE_results$adj.P.Val),pch=10,cex=0.1,col="red")
results <- results %>%  mutate(
Expression = case_when(logFC >= 0 & adj.P.Val <= 0.05 ~ "Up-regulated",
logFC <= 0 & adj.P.Val <= 0.05 ~ "Down-regulated",
TRUE ~ "Unchanged"))
p2 <- ggplot(results, aes(logFC,-log10(adj.P.Val))) +
geom_point(aes(color = Expression), size = 2/5) +
xlab(expression("log"[2]*"FC")) +
ylab(expression("-log"[10]*"FDR")) +
scale_color_manual(values = c(  "firebrick3","gray50","dodgerblue3")) +
guides(colour = guide_legend(override.aes = list(size=10),legend.key.size=10,title=""))  +theme_minimal()+theme(legend.text=element_text(size=20))
p2
ggsave( "ggvolcano.png", plot = p2)
results <- results %>%  mutate(
Expression = case_when(logFC >= 0 & adj.P.Val <= 0.05 ~ "Up-regulated",
logFC <= 0 & adj.P.Val <= 0.05 ~ "Down-regulated",
TRUE ~ "Unchanged"))
p2 <- ggplot(results, aes(logFC,-log10(adj.P.Val))) +
geom_point(aes(color = Expression),show.legend=F) +
xlab(expression("log"[2]*"FC")) +
ylab(expression("-log"[10]*"FDR")) +
scale_color_manual(values = c(  "firebrick3","gray50","dodgerblue3"))   +theme_minimal()
p2
ggsave( "ggvolcanonolegend.png", plot = p2)
plot(results$AveExpr,results$logFC,pch=10,cex=0.1)
points(DE_results$AveExpr,DE_results$logFC,pch=10,cex=0.1,col="red")
final_results_DE<-merge(DE_results,DE_counts,by=0)
colnames(final_results_DE)[1]<-"GeneID"
write.table(final_results_DE,"DE_results.txt",row.names=T,col.names=T,sep="\t")
write(rownames(DE_results),"allDE.txt",sep="n")
write.table(rownames(DE_results)[which(DE_results$logFC>0)],"upregulated.txt",row.names=F,col.names=F,quote=F)
write.table(rownames(DE_results)[which(DE_results$logFC<0)],"downregulated.txt",row.names=F,col.names=F,quote=F)
write(rownames(dge$counts),"backgroundGO.txt",sep="\n")
write(rownames(dge$counts)[-which(rownames(dge$counts)%in%rownames(DE_results))],"backgroundGOnooverlap.txt",sep="n")
final_results<-merge(results,dge$counts,by=0)
colnames(final_results)[1]<-"GeneID"
write.table(final_results,"ALLgenes_results.txt",row.names=T,col.names=T,sep="\t")
###Careful, dirty fix
counts<-cpm(dge$counts)
save(counts,results,file="countsand_logFCforplottingGene.RData")
rm(counts) #to make sure I don't use it thinking it is counts
results <- results %>%  mutate(
Expression = case_when(logFC >= log2(2) & adj.P.Val <= 0.05 ~ "Up-regulated",
logFC <= -log2(2) & adj.P.Val <= 0.05 ~ "Down-regulated",
TRUE ~ "Unchanged"))
p2 <- ggplot(results, aes(logFC,-log10(adj.P.Val))) +
geom_point(aes(color = Expression),show.legend=F) +
xlab(expression("log"[2]*"FC")) +
ylab(expression("-log"[10]*"FDR")) +
scale_color_manual(values = c(  "firebrick3","gray50","dodgerblue3"))   +theme_minimal() #+geom_vline(xintercept = c(-2,2),  color = "black", size=0.5)
p2
ggsave("ggvolcanonLFC2olegend.pdf",plot = p2)
results <- results %>%  mutate(
Expression = case_when(logFC >= 1.5 & adj.P.Val <= 0.05 ~ "Up-regulated",
logFC <= -1.5 & adj.P.Val <= 0.05 ~ "Down-regulated",
TRUE ~ "Unchanged"))
p2 <- ggplot(results, aes(logFC,-log10(adj.P.Val))) +
geom_point(aes(color = Expression),show.legend=F) +
xlab(expression("log"[2]*"FC")) +
ylab(expression("-log"[10]*"FDR")) +
scale_color_manual(values = c(  "firebrick3","gray50","dodgerblue3"))   +theme_minimal() #+geom_vline(xintercept = c(-1.5,1.5),  color = "black", size=0.5)
p2
ggsave("ggvolcanonLFC15olegend.pdf",plot = p2)
dds=DESeqDataSetFromMatrix(countData = round(dge$counts),colData = samples,design = ~rep(c("silver","yellow"),each=6))
dds <- DESeq(dds)
vsd<-vst(dds,blind=T)
sampleDists <- dist(t(assay(vsd)))
sampleDistMatrix <- as.matrix(sampleDists)
rownames(sampleDistMatrix) <- colnames(assay(vsd))
colnames(sampleDistMatrix) <- NULL
colors <- colorRampPalette( rev(brewer.pal(9, "Blues")) )(255)
pdf("clustering_heatmap.pdf")
pheatmap(sampleDistMatrix,
clustering_distance_rows=sampleDists,
clustering_distance_cols=sampleDists,
col=colors)
dev.off()
data<-read.table("~/Desktop/diff_sites.txt",h=T)
dim(data)
table(data[,4])
data
didd<-data[-which(data[,4]),]
didd<-data[-which(data[,4]=="B"),]
diff<-data[-which(data[,4]=="B"),]
diff
table(data[,4])# how many shared and different
diff
table(data[,4])# how many shared and different
1e9/10000
ee5
1e5
1000000000/10000
100000/1
3.8e5
3.8e5 *60*60*24*364
3.8e5 *60*60*24*365
library("vcf")
library("vcfr")
library("VCFr")
install.packlages("vcfr")
install.packages("vcfr")
install.packages("vcfR")
